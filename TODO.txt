                                |   Components  |


*********   mettre en pause les systems pour stats_popup
*********   scene popup
*********   utils : checkpoint : on passe bien dans le tween_fade_out mais le perso reste en noir
---------   hero : touche du bas pour s'accroupir : tween sur le scale
---------   plus rapide est la réponse plus les dégats sont grands
---------   mettre composant de dégats sur missile, monstre...
---------   2ème collision avec le feu pousse le hero                  
---------   vector orthogonal : collider.get_normal angle entre vecteur et la normale : -angle pour le rebond
---------


                                |   Positioning  |

---------  
---------   


                                |   Features  |

---------   floating text : dégats reçus : dans collision on appelle le Utils mais proc dans dans le process
---------   Le joueur peut voir le score s'incrémenter et pas prendre direct 10 de dégats par exemple : tween sur les dégats pris (health_bar, "value", health_bar.value, health, 0.4, Tween...)
---------   c'est pas bau les datadriven des notions
---------   utils pour changement de scene : fade_in avec un listener pour rappeler / fade_out  : charger les systems des enemis puis après ceux des heros
---------   jauge circulaire
---------   AnimationNode  : pour organiser l'ordre des animations
---------   effets sonores
---------   faire un effecteur : colonne de vent
---------   faire un laser


                                |   Add_on  |

*********   utiliser le compteur de scenes  : tuto / fight / fire_0 / fight / fire / fight 
---------   relier les notions cochées au code : liste de notions 
